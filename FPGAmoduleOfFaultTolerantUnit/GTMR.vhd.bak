----------------------------------------------------------------------
-- Блок GTMR модуля FPGAmodule узла FaultTolerantUnit.
-- Функциональный элемент (вычислитель) резервирован тремя
-- аналогичными элементами. Два резервных элемента работают
-- по умолчанию, третий начинает работу при достижении одним
-- из вычислителей заданного количества ошибок (3). Одновременно
-- с этим вычислитель, работу которого начинает выполнять
-- дополнительный вычислитель, отключается.
-- Логика работы функционального элемента заключается в нахождении
-- контрольной суммы входной последовательности, рассчитанной
-- алгоритмом CRC32.
----------------------------------------------------------------------
-- Порождающий полином (31:0):
-- 1+x^1+x^2+x^4+x^5+x^7+x^8+x^10+x^11+x^12+x^16+x^22+x^23+x^26+x^32
----------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity GTMR is
	port (
		-- Тактовый сигнал
		clk : in std_logic;
		
		-- Входные данные (32-битная последовательность)
		data_in : in std_logic_vector(31 downto 0);
		
		-- Контрольная сумма входных данных, рассчитанная алгоритмом CRC32 (32-битная последовательность)
		CRC32_1, CRC32_2, CRC32_3, CRC32_4 : inout std_logic_vector(31 downto 0);
		
		-- Входные значения голосующего элемента
		voting_element_in_1, voting_element_in_2, voting_element_in_3 : out std_logic_vector(31 downto 0);
		
		-- Выходное значение голосующего элемента
		voting_element_out : out std_logic_vector(31 downto 0)
	);
end entity GTMR;

architecture behavioral of GTMR is
	-- Регистры сдвига с линейной обратной связью (LFSR)
	signal LFSR_1, LFSR_2, LFSR_3, LFSR_4 : std_logic_vector(31 downto 0) := (others => '0');
	
	-- Счётчики ошибок трёх основных вычислителей
	signal error_CRC32_1, error_CRC32_2, error_CRC32_3 : integer := 0;
	
	-- Флаги для включения/выключения вычислителей
	signal enable_CRC32_1, enable_CRC32_2, enable_CRC32_3 : boolean := true;
	signal enable_CRC32_4 : boolean := false; -- дополнительный вычислитель по умолчанию отключен
	
	-- Внутренние сигналы для входных значений голосующего элемента
	signal internal_voting_element_in_1, internal_voting_element_in_2, internal_voting_element_in_3 : std_logic_vector(31 downto 0);
	
	-- Внутренний сигнал выходного значения голосующего элемента
	signal internal_voting_element_out : std_logic_vector(31 downto 0);
begin
	-- Вычислитель №1
	process (clk)
		begin
			if rising_edge(clk) then
				if enable_CRC32_1 then
					-- Вычисление CRC32_1 с использованием LFSR_1
					CRC32_1(0) <= LFSR_1(0) xor LFSR_1(6) xor LFSR_1(9) xor LFSR_1(10) xor LFSR_1(12) xor LFSR_1(16) xor LFSR_1(24) xor LFSR_1(25) xor LFSR_1(26) xor LFSR_1(28) xor LFSR_1(29) xor LFSR_1(30) xor LFSR_1(31) xor data_in(0) xor data_in(6) xor data_in(9) xor data_in(10) xor data_in(12) xor data_in(16) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(29) xor data_in(30) xor data_in(31);
					CRC32_1(1) <= LFSR_1(0) xor LFSR_1(1) xor LFSR_1(6) xor LFSR_1(7) xor LFSR_1(9) xor LFSR_1(11) xor LFSR_1(12) xor LFSR_1(13) xor LFSR_1(16) xor LFSR_1(17) xor LFSR_1(24) xor LFSR_1(27) xor LFSR_1(28) xor data_in(0) xor data_in(1) xor data_in(6) xor data_in(7) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(13) xor data_in(16) xor data_in(17) xor data_in(24) xor data_in(27) xor data_in(28);
					CRC32_1(2) <= LFSR_1(0) xor LFSR_1(1) xor LFSR_1(2) xor LFSR_1(6) xor LFSR_1(7) xor LFSR_1(8) xor LFSR_1(9) xor LFSR_1(13) xor LFSR_1(14) xor LFSR_1(16) xor LFSR_1(17) xor LFSR_1(18) xor LFSR_1(24) xor LFSR_1(26) xor LFSR_1(30) xor LFSR_1(31) xor data_in(0) xor data_in(1) xor data_in(2) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(17) xor data_in(18) xor data_in(24) xor data_in(26) xor data_in(30) xor data_in(31);
					CRC32_1(3) <= LFSR_1(1) xor LFSR_1(2) xor LFSR_1(3) xor LFSR_1(7) xor LFSR_1(8) xor LFSR_1(9) xor LFSR_1(10) xor LFSR_1(14) xor LFSR_1(15) xor LFSR_1(17) xor LFSR_1(18) xor LFSR_1(19) xor LFSR_1(25) xor LFSR_1(27) xor LFSR_1(31) xor data_in(1) xor data_in(2) xor data_in(3) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(10) xor data_in(14) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(19) xor data_in(25) xor data_in(27) xor data_in(31);
					CRC32_1(4) <= LFSR_1(0) xor LFSR_1(2) xor LFSR_1(3) xor LFSR_1(4) xor LFSR_1(6) xor LFSR_1(8) xor LFSR_1(11) xor LFSR_1(12) xor LFSR_1(15) xor LFSR_1(18) xor LFSR_1(19) xor LFSR_1(20) xor LFSR_1(24) xor LFSR_1(25) xor LFSR_1(29) xor LFSR_1(30) xor LFSR_1(31) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(8) xor data_in(11) xor data_in(12) xor data_in(15) xor data_in(18) xor data_in(19) xor data_in(20) xor data_in(24) xor data_in(25) xor data_in(29) xor data_in(30) xor data_in(31);
					CRC32_1(5) <= LFSR_1(0) xor LFSR_1(1) xor LFSR_1(3) xor LFSR_1(4) xor LFSR_1(5) xor LFSR_1(6) xor LFSR_1(7) xor LFSR_1(10) xor LFSR_1(13) xor LFSR_1(19) xor LFSR_1(20) xor LFSR_1(21) xor LFSR_1(24) xor LFSR_1(28) xor LFSR_1(29) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(13) xor data_in(19) xor data_in(20) xor data_in(21) xor data_in(24) xor data_in(28) xor data_in(29);
					CRC32_1(6) <= LFSR_1(1) xor LFSR_1(2) xor LFSR_1(4) xor LFSR_1(5) xor LFSR_1(6) xor LFSR_1(7) xor LFSR_1(8) xor LFSR_1(11) xor LFSR_1(14) xor LFSR_1(20) xor LFSR_1(21) xor LFSR_1(22) xor LFSR_1(25) xor LFSR_1(29) xor LFSR_1(30) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(14) xor data_in(20) xor data_in(21) xor data_in(22) xor data_in(25) xor data_in(29) xor data_in(30);
					CRC32_1(7) <= LFSR_1(0) xor LFSR_1(2) xor LFSR_1(3) xor LFSR_1(5) xor LFSR_1(7) xor LFSR_1(8) xor LFSR_1(10) xor LFSR_1(15) xor LFSR_1(16) xor LFSR_1(21) xor LFSR_1(22) xor LFSR_1(23) xor LFSR_1(24) xor LFSR_1(25) xor LFSR_1(28) xor LFSR_1(29) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(7) xor data_in(8) xor data_in(10) xor data_in(15) xor data_in(16) xor data_in(21) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(28) xor data_in(29);
					CRC32_1(8) <= LFSR_1(0) xor LFSR_1(1) xor LFSR_1(3) xor LFSR_1(4) xor LFSR_1(8) xor LFSR_1(10) xor LFSR_1(11) xor LFSR_1(12) xor LFSR_1(17) xor LFSR_1(22) xor LFSR_1(23) xor LFSR_1(28) xor LFSR_1(31) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(8) xor data_in(10) xor data_in(11) xor data_in(12) xor data_in(17) xor data_in(22) xor data_in(23) xor data_in(28) xor data_in(31);
					CRC32_1(9) <= LFSR_1(1) xor LFSR_1(2) xor LFSR_1(4) xor LFSR_1(5) xor LFSR_1(9) xor LFSR_1(11) xor LFSR_1(12) xor LFSR_1(13) xor LFSR_1(18) xor LFSR_1(23) xor LFSR_1(24) xor LFSR_1(29) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(13) xor data_in(18) xor data_in(23) xor data_in(24) xor data_in(29);
					CRC32_1(10) <= LFSR_1(0) xor LFSR_1(2) xor LFSR_1(3) xor LFSR_1(5) xor LFSR_1(9) xor LFSR_1(13) xor LFSR_1(14) xor LFSR_1(16) xor LFSR_1(19) xor LFSR_1(26) xor LFSR_1(28) xor LFSR_1(29) xor LFSR_1(31) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(19) xor data_in(26) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_1(11) <= LFSR_1(0) xor LFSR_1(1) xor LFSR_1(3) xor LFSR_1(4) xor LFSR_1(9) xor LFSR_1(12) xor LFSR_1(14) xor LFSR_1(15) xor LFSR_1(16) xor LFSR_1(17) xor LFSR_1(20) xor LFSR_1(24) xor LFSR_1(25) xor LFSR_1(26) xor LFSR_1(27) xor LFSR_1(28) xor LFSR_1(31) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(9) xor data_in(12) xor data_in(14) xor data_in(15) xor data_in(16) xor data_in(17) xor data_in(20) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(31);
					CRC32_1(12) <= LFSR_1(0) xor LFSR_1(1) xor LFSR_1(2) xor LFSR_1(4) xor LFSR_1(5) xor LFSR_1(6) xor LFSR_1(9) xor LFSR_1(12) xor LFSR_1(13) xor LFSR_1(15) xor LFSR_1(17) xor LFSR_1(18) xor LFSR_1(21) xor LFSR_1(24) xor LFSR_1(27) xor LFSR_1(30) xor LFSR_1(31) xor data_in(0) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(9) xor data_in(12) xor data_in(13) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(21) xor data_in(24) xor data_in(27) xor data_in(30) xor data_in(31);
					CRC32_1(13) <= LFSR_1(1) xor LFSR_1(2) xor LFSR_1(3) xor LFSR_1(5) xor LFSR_1(6) xor LFSR_1(7) xor LFSR_1(10) xor LFSR_1(13) xor LFSR_1(14) xor LFSR_1(16) xor LFSR_1(18) xor LFSR_1(19) xor LFSR_1(22) xor LFSR_1(25) xor LFSR_1(28) xor LFSR_1(31) xor data_in(1) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(18) xor data_in(19) xor data_in(22) xor data_in(25) xor data_in(28) xor data_in(31);
					CRC32_1(14) <= LFSR_1(2) xor LFSR_1(3) xor LFSR_1(4) xor LFSR_1(6) xor LFSR_1(7) xor LFSR_1(8) xor LFSR_1(11) xor LFSR_1(14) xor LFSR_1(15) xor LFSR_1(17) xor LFSR_1(19) xor LFSR_1(20) xor LFSR_1(23) xor LFSR_1(26) xor LFSR_1(29) xor data_in(2) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(14) xor data_in(15) xor data_in(17) xor data_in(19) xor data_in(20) xor data_in(23) xor data_in(26) xor data_in(29);
					CRC32_1(15) <= LFSR_1(3) xor LFSR_1(4) xor LFSR_1(5) xor LFSR_1(7) xor LFSR_1(8) xor LFSR_1(9) xor LFSR_1(12) xor LFSR_1(15) xor LFSR_1(16) xor LFSR_1(18) xor LFSR_1(20) xor LFSR_1(21) xor LFSR_1(24) xor LFSR_1(27) xor LFSR_1(30) xor data_in(3) xor data_in(4) xor data_in(5) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(12) xor data_in(15) xor data_in(16) xor data_in(18) xor data_in(20) xor data_in(21) xor data_in(24) xor data_in(27) xor data_in(30);
					CRC32_1(16) <= LFSR_1(0) xor LFSR_1(4) xor LFSR_1(5) xor LFSR_1(8) xor LFSR_1(12) xor LFSR_1(13) xor LFSR_1(17) xor LFSR_1(19) xor LFSR_1(21) xor LFSR_1(22) xor LFSR_1(24) xor LFSR_1(26) xor LFSR_1(29) xor LFSR_1(30) xor data_in(0) xor data_in(4) xor data_in(5) xor data_in(8) xor data_in(12) xor data_in(13) xor data_in(17) xor data_in(19) xor data_in(21) xor data_in(22) xor data_in(24) xor data_in(26) xor data_in(29) xor data_in(30);
					CRC32_1(17) <= LFSR_1(1) xor LFSR_1(5) xor LFSR_1(6) xor LFSR_1(9) xor LFSR_1(13) xor LFSR_1(14) xor LFSR_1(18) xor LFSR_1(20) xor LFSR_1(22) xor LFSR_1(23) xor LFSR_1(25) xor LFSR_1(27) xor LFSR_1(30) xor LFSR_1(31) xor data_in(1) xor data_in(5) xor data_in(6) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(18) xor data_in(20) xor data_in(22) xor data_in(23) xor data_in(25) xor data_in(27) xor data_in(30) xor data_in(31);
					CRC32_1(18) <= LFSR_1(2) xor LFSR_1(6) xor LFSR_1(7) xor LFSR_1(10) xor LFSR_1(14) xor LFSR_1(15) xor LFSR_1(19) xor LFSR_1(21) xor LFSR_1(23) xor LFSR_1(24) xor LFSR_1(26) xor LFSR_1(28) xor LFSR_1(31) xor data_in(2) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(14) xor data_in(15) xor data_in(19) xor data_in(21) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(28) xor data_in(31);
					CRC32_1(19) <= LFSR_1(3) xor LFSR_1(7) xor LFSR_1(8) xor LFSR_1(11) xor LFSR_1(15) xor LFSR_1(16) xor LFSR_1(20) xor LFSR_1(22) xor LFSR_1(24) xor LFSR_1(25) xor LFSR_1(27) xor LFSR_1(29) xor data_in(3) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(15) xor data_in(16) xor data_in(20) xor data_in(22) xor data_in(24) xor data_in(25) xor data_in(27) xor data_in(29);
					CRC32_1(20) <= LFSR_1(4) xor LFSR_1(8) xor LFSR_1(9) xor LFSR_1(12) xor LFSR_1(16) xor LFSR_1(17) xor LFSR_1(21) xor LFSR_1(23) xor LFSR_1(25) xor LFSR_1(26) xor LFSR_1(28) xor LFSR_1(30) xor data_in(4) xor data_in(8) xor data_in(9) xor data_in(12) xor data_in(16) xor data_in(17) xor data_in(21) xor data_in(23) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(30);
					CRC32_1(21) <= LFSR_1(5) xor LFSR_1(9) xor LFSR_1(10) xor LFSR_1(13) xor LFSR_1(17) xor LFSR_1(18) xor LFSR_1(22) xor LFSR_1(24) xor LFSR_1(26) xor LFSR_1(27) xor LFSR_1(29) xor LFSR_1(31) xor data_in(5) xor data_in(9) xor data_in(10) xor data_in(13) xor data_in(17) xor data_in(18) xor data_in(22) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_1(22) <= LFSR_1(0) xor LFSR_1(9) xor LFSR_1(11) xor LFSR_1(12) xor LFSR_1(14) xor LFSR_1(16) xor LFSR_1(18) xor LFSR_1(19) xor LFSR_1(23) xor LFSR_1(24) xor LFSR_1(26) xor LFSR_1(27) xor LFSR_1(29) xor LFSR_1(31) xor data_in(0) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(14) xor data_in(16) xor data_in(18) xor data_in(19) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_1(23) <= LFSR_1(0) xor LFSR_1(1) xor LFSR_1(6) xor LFSR_1(9) xor LFSR_1(13) xor LFSR_1(15) xor LFSR_1(16) xor LFSR_1(17) xor LFSR_1(19) xor LFSR_1(20) xor LFSR_1(26) xor LFSR_1(27) xor LFSR_1(29) xor LFSR_1(31) xor data_in(0) xor data_in(1) xor data_in(6) xor data_in(9) xor data_in(13) xor data_in(15) xor data_in(16) xor data_in(17) xor data_in(19) xor data_in(20) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_1(24) <= LFSR_1(1) xor LFSR_1(2) xor LFSR_1(7) xor LFSR_1(10) xor LFSR_1(14) xor LFSR_1(16) xor LFSR_1(17) xor LFSR_1(18) xor LFSR_1(20) xor LFSR_1(21) xor LFSR_1(27) xor LFSR_1(28) xor LFSR_1(30) xor data_in(1) xor data_in(2) xor data_in(7) xor data_in(10) xor data_in(14) xor data_in(16) xor data_in(17) xor data_in(18) xor data_in(20) xor data_in(21) xor data_in(27) xor data_in(28) xor data_in(30);
					CRC32_1(25) <= LFSR_1(2) xor LFSR_1(3) xor LFSR_1(8) xor LFSR_1(11) xor LFSR_1(15) xor LFSR_1(17) xor LFSR_1(18) xor LFSR_1(19) xor LFSR_1(21) xor LFSR_1(22) xor LFSR_1(28) xor LFSR_1(29) xor LFSR_1(31) xor data_in(2) xor data_in(3) xor data_in(8) xor data_in(11) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(19) xor data_in(21) xor data_in(22) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_1(26) <= LFSR_1(0) xor LFSR_1(3) xor LFSR_1(4) xor LFSR_1(6) xor LFSR_1(10) xor LFSR_1(18) xor LFSR_1(19) xor LFSR_1(20) xor LFSR_1(22) xor LFSR_1(23) xor LFSR_1(24) xor LFSR_1(25) xor LFSR_1(26) xor LFSR_1(28) xor LFSR_1(31) xor data_in(0) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(10) xor data_in(18) xor data_in(19) xor data_in(20) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(31);
					CRC32_1(27) <= LFSR_1(1) xor LFSR_1(4) xor LFSR_1(5) xor LFSR_1(7) xor LFSR_1(11) xor LFSR_1(19) xor LFSR_1(20) xor LFSR_1(21) xor LFSR_1(23) xor LFSR_1(24) xor LFSR_1(25) xor LFSR_1(26) xor LFSR_1(27) xor LFSR_1(29) xor data_in(1) xor data_in(4) xor data_in(5) xor data_in(7) xor data_in(11) xor data_in(19) xor data_in(20) xor data_in(21) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(29);
					CRC32_1(28) <= LFSR_1(2) xor LFSR_1(5) xor LFSR_1(6) xor LFSR_1(8) xor LFSR_1(12) xor LFSR_1(20) xor LFSR_1(21) xor LFSR_1(22) xor LFSR_1(24) xor LFSR_1(25) xor LFSR_1(26) xor LFSR_1(27) xor LFSR_1(28) xor LFSR_1(30) xor data_in(2) xor data_in(5) xor data_in(6) xor data_in(8) xor data_in(12) xor data_in(20) xor data_in(21) xor data_in(22) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(30);
					CRC32_1(29) <= LFSR_1(3) xor LFSR_1(6) xor LFSR_1(7) xor LFSR_1(9) xor LFSR_1(13) xor LFSR_1(21) xor LFSR_1(22) xor LFSR_1(23) xor LFSR_1(25) xor LFSR_1(26) xor LFSR_1(27) xor LFSR_1(28) xor LFSR_1(29) xor LFSR_1(31) xor data_in(3) xor data_in(6) xor data_in(7) xor data_in(9) xor data_in(13) xor data_in(21) xor data_in(22) xor data_in(23) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_1(30) <= LFSR_1(4) xor LFSR_1(7) xor LFSR_1(8) xor LFSR_1(10) xor LFSR_1(14) xor LFSR_1(22) xor LFSR_1(23) xor LFSR_1(24) xor LFSR_1(26) xor LFSR_1(27) xor LFSR_1(28) xor LFSR_1(29) xor LFSR_1(30) xor data_in(4) xor data_in(7) xor data_in(8) xor data_in(10) xor data_in(14) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(30);
					CRC32_1(31) <= LFSR_1(5) xor LFSR_1(8) xor LFSR_1(9) xor LFSR_1(11) xor LFSR_1(15) xor LFSR_1(23) xor LFSR_1(24) xor LFSR_1(25) xor LFSR_1(27) xor LFSR_1(28) xor LFSR_1(29) xor LFSR_1(30) xor LFSR_1(31) xor data_in(5) xor data_in(8) xor data_in(9) xor data_in(11) xor data_in(15) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(30) xor data_in(31);
				end if;
			end if;
	end process;
	
	-- Вычислитель №2
	process (clk)
		begin
			if rising_edge(clk) then
				if enable_CRC32_2 then
					-- Вычисление CRC32_2 с использованием LFSR_2
					CRC32_2(0) <= LFSR_2(0) xor LFSR_2(6) xor LFSR_2(9) xor LFSR_2(10) xor LFSR_2(12) xor LFSR_2(16) xor LFSR_2(24) xor LFSR_2(25) xor LFSR_2(26) xor LFSR_2(28) xor LFSR_2(29) xor LFSR_2(30) xor LFSR_2(31) xor data_in(0) xor data_in(6) xor data_in(9) xor data_in(10) xor data_in(12) xor data_in(16) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(29) xor data_in(30) xor data_in(31);
					CRC32_2(1) <= LFSR_2(0) xor LFSR_2(1) xor LFSR_2(6) xor LFSR_2(7) xor LFSR_2(9) xor LFSR_2(11) xor LFSR_2(12) xor LFSR_2(13) xor LFSR_2(16) xor LFSR_2(17) xor LFSR_2(24) xor LFSR_2(27) xor LFSR_2(28) xor data_in(0) xor data_in(1) xor data_in(6) xor data_in(7) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(13) xor data_in(16) xor data_in(17) xor data_in(24) xor data_in(27) xor data_in(28);
					CRC32_2(2) <= LFSR_2(0) xor LFSR_2(1) xor LFSR_2(2) xor LFSR_2(6) xor LFSR_2(7) xor LFSR_2(8) xor LFSR_2(9) xor LFSR_2(13) xor LFSR_2(14) xor LFSR_2(16) xor LFSR_2(17) xor LFSR_2(18) xor LFSR_2(24) xor LFSR_2(26) xor LFSR_2(30) xor LFSR_2(31) xor data_in(0) xor data_in(1) xor data_in(2) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(17) xor data_in(18) xor data_in(24) xor data_in(26) xor data_in(30) xor data_in(31);
					CRC32_2(3) <= LFSR_2(1) xor LFSR_2(2) xor LFSR_2(3) xor LFSR_2(7) xor LFSR_2(8) xor LFSR_2(9) xor LFSR_2(10) xor LFSR_2(14) xor LFSR_2(15) xor LFSR_2(17) xor LFSR_2(18) xor LFSR_2(19) xor LFSR_2(25) xor LFSR_2(27) xor LFSR_2(31) xor data_in(1) xor data_in(2) xor data_in(3) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(10) xor data_in(14) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(19) xor data_in(25) xor data_in(27) xor data_in(31);
					CRC32_2(4) <= LFSR_2(0) xor LFSR_2(2) xor LFSR_2(3) xor LFSR_2(4) xor LFSR_2(6) xor LFSR_2(8) xor LFSR_2(11) xor LFSR_2(12) xor LFSR_2(15) xor LFSR_2(18) xor LFSR_2(19) xor LFSR_2(20) xor LFSR_2(24) xor LFSR_2(25) xor LFSR_2(29) xor LFSR_2(30) xor LFSR_2(31) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(8) xor data_in(11) xor data_in(12) xor data_in(15) xor data_in(18) xor data_in(19) xor data_in(20) xor data_in(24) xor data_in(25) xor data_in(29) xor data_in(30) xor data_in(31);
					CRC32_2(5) <= LFSR_2(0) xor LFSR_2(1) xor LFSR_2(3) xor LFSR_2(4) xor LFSR_2(5) xor LFSR_2(6) xor LFSR_2(7) xor LFSR_2(10) xor LFSR_2(13) xor LFSR_2(19) xor LFSR_2(20) xor LFSR_2(21) xor LFSR_2(24) xor LFSR_2(28) xor LFSR_2(29) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(13) xor data_in(19) xor data_in(20) xor data_in(21) xor data_in(24) xor data_in(28) xor data_in(29);
					CRC32_2(6) <= LFSR_2(1) xor LFSR_2(2) xor LFSR_2(4) xor LFSR_2(5) xor LFSR_2(6) xor LFSR_2(7) xor LFSR_2(8) xor LFSR_2(11) xor LFSR_2(14) xor LFSR_2(20) xor LFSR_2(21) xor LFSR_2(22) xor LFSR_2(25) xor LFSR_2(29) xor LFSR_2(30) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(14) xor data_in(20) xor data_in(21) xor data_in(22) xor data_in(25) xor data_in(29) xor data_in(30);
					CRC32_2(7) <= LFSR_2(0) xor LFSR_2(2) xor LFSR_2(3) xor LFSR_2(5) xor LFSR_2(7) xor LFSR_2(8) xor LFSR_2(10) xor LFSR_2(15) xor LFSR_2(16) xor LFSR_2(21) xor LFSR_2(22) xor LFSR_2(23) xor LFSR_2(24) xor LFSR_2(25) xor LFSR_2(28) xor LFSR_2(29) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(7) xor data_in(8) xor data_in(10) xor data_in(15) xor data_in(16) xor data_in(21) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(28) xor data_in(29);
					CRC32_2(8) <= LFSR_2(0) xor LFSR_2(1) xor LFSR_2(3) xor LFSR_2(4) xor LFSR_2(8) xor LFSR_2(10) xor LFSR_2(11) xor LFSR_2(12) xor LFSR_2(17) xor LFSR_2(22) xor LFSR_2(23) xor LFSR_2(28) xor LFSR_2(31) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(8) xor data_in(10) xor data_in(11) xor data_in(12) xor data_in(17) xor data_in(22) xor data_in(23) xor data_in(28) xor data_in(31);
					CRC32_2(9) <= LFSR_2(1) xor LFSR_2(2) xor LFSR_2(4) xor LFSR_2(5) xor LFSR_2(9) xor LFSR_2(11) xor LFSR_2(12) xor LFSR_2(13) xor LFSR_2(18) xor LFSR_2(23) xor LFSR_2(24) xor LFSR_2(29) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(13) xor data_in(18) xor data_in(23) xor data_in(24) xor data_in(29);
					CRC32_2(10) <= LFSR_2(0) xor LFSR_2(2) xor LFSR_2(3) xor LFSR_2(5) xor LFSR_2(9) xor LFSR_2(13) xor LFSR_2(14) xor LFSR_2(16) xor LFSR_2(19) xor LFSR_2(26) xor LFSR_2(28) xor LFSR_2(29) xor LFSR_2(31) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(19) xor data_in(26) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_2(11) <= LFSR_2(0) xor LFSR_2(1) xor LFSR_2(3) xor LFSR_2(4) xor LFSR_2(9) xor LFSR_2(12) xor LFSR_2(14) xor LFSR_2(15) xor LFSR_2(16) xor LFSR_2(17) xor LFSR_2(20) xor LFSR_2(24) xor LFSR_2(25) xor LFSR_2(26) xor LFSR_2(27) xor LFSR_2(28) xor LFSR_2(31) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(9) xor data_in(12) xor data_in(14) xor data_in(15) xor data_in(16) xor data_in(17) xor data_in(20) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(31);
					CRC32_2(12) <= LFSR_2(0) xor LFSR_2(1) xor LFSR_2(2) xor LFSR_2(4) xor LFSR_2(5) xor LFSR_2(6) xor LFSR_2(9) xor LFSR_2(12) xor LFSR_2(13) xor LFSR_2(15) xor LFSR_2(17) xor LFSR_2(18) xor LFSR_2(21) xor LFSR_2(24) xor LFSR_2(27) xor LFSR_2(30) xor LFSR_2(31) xor data_in(0) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(9) xor data_in(12) xor data_in(13) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(21) xor data_in(24) xor data_in(27) xor data_in(30) xor data_in(31);
					CRC32_2(13) <= LFSR_2(1) xor LFSR_2(2) xor LFSR_2(3) xor LFSR_2(5) xor LFSR_2(6) xor LFSR_2(7) xor LFSR_2(10) xor LFSR_2(13) xor LFSR_2(14) xor LFSR_2(16) xor LFSR_2(18) xor LFSR_2(19) xor LFSR_2(22) xor LFSR_2(25) xor LFSR_2(28) xor LFSR_2(31) xor data_in(1) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(18) xor data_in(19) xor data_in(22) xor data_in(25) xor data_in(28) xor data_in(31);
					CRC32_2(14) <= LFSR_2(2) xor LFSR_2(3) xor LFSR_2(4) xor LFSR_2(6) xor LFSR_2(7) xor LFSR_2(8) xor LFSR_2(11) xor LFSR_2(14) xor LFSR_2(15) xor LFSR_2(17) xor LFSR_2(19) xor LFSR_2(20) xor LFSR_2(23) xor LFSR_2(26) xor LFSR_2(29) xor data_in(2) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(14) xor data_in(15) xor data_in(17) xor data_in(19) xor data_in(20) xor data_in(23) xor data_in(26) xor data_in(29);
					CRC32_2(15) <= LFSR_2(3) xor LFSR_2(4) xor LFSR_2(5) xor LFSR_2(7) xor LFSR_2(8) xor LFSR_2(9) xor LFSR_2(12) xor LFSR_2(15) xor LFSR_2(16) xor LFSR_2(18) xor LFSR_2(20) xor LFSR_2(21) xor LFSR_2(24) xor LFSR_2(27) xor LFSR_2(30) xor data_in(3) xor data_in(4) xor data_in(5) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(12) xor data_in(15) xor data_in(16) xor data_in(18) xor data_in(20) xor data_in(21) xor data_in(24) xor data_in(27) xor data_in(30);
					CRC32_2(16) <= LFSR_2(0) xor LFSR_2(4) xor LFSR_2(5) xor LFSR_2(8) xor LFSR_2(12) xor LFSR_2(13) xor LFSR_2(17) xor LFSR_2(19) xor LFSR_2(21) xor LFSR_2(22) xor LFSR_2(24) xor LFSR_2(26) xor LFSR_2(29) xor LFSR_2(30) xor data_in(0) xor data_in(4) xor data_in(5) xor data_in(8) xor data_in(12) xor data_in(13) xor data_in(17) xor data_in(19) xor data_in(21) xor data_in(22) xor data_in(24) xor data_in(26) xor data_in(29) xor data_in(30);
					CRC32_2(17) <= LFSR_2(1) xor LFSR_2(5) xor LFSR_2(6) xor LFSR_2(9) xor LFSR_2(13) xor LFSR_2(14) xor LFSR_2(18) xor LFSR_2(20) xor LFSR_2(22) xor LFSR_2(23) xor LFSR_2(25) xor LFSR_2(27) xor LFSR_2(30) xor LFSR_2(31) xor data_in(1) xor data_in(5) xor data_in(6) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(18) xor data_in(20) xor data_in(22) xor data_in(23) xor data_in(25) xor data_in(27) xor data_in(30) xor data_in(31);
					CRC32_2(18) <= LFSR_2(2) xor LFSR_2(6) xor LFSR_2(7) xor LFSR_2(10) xor LFSR_2(14) xor LFSR_2(15) xor LFSR_2(19) xor LFSR_2(21) xor LFSR_2(23) xor LFSR_2(24) xor LFSR_2(26) xor LFSR_2(28) xor LFSR_2(31) xor data_in(2) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(14) xor data_in(15) xor data_in(19) xor data_in(21) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(28) xor data_in(31);
					CRC32_2(19) <= LFSR_2(3) xor LFSR_2(7) xor LFSR_2(8) xor LFSR_2(11) xor LFSR_2(15) xor LFSR_2(16) xor LFSR_2(20) xor LFSR_2(22) xor LFSR_2(24) xor LFSR_2(25) xor LFSR_2(27) xor LFSR_2(29) xor data_in(3) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(15) xor data_in(16) xor data_in(20) xor data_in(22) xor data_in(24) xor data_in(25) xor data_in(27) xor data_in(29);
					CRC32_2(20) <= LFSR_2(4) xor LFSR_2(8) xor LFSR_2(9) xor LFSR_2(12) xor LFSR_2(16) xor LFSR_2(17) xor LFSR_2(21) xor LFSR_2(23) xor LFSR_2(25) xor LFSR_2(26) xor LFSR_2(28) xor LFSR_2(30) xor data_in(4) xor data_in(8) xor data_in(9) xor data_in(12) xor data_in(16) xor data_in(17) xor data_in(21) xor data_in(23) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(30);
					CRC32_2(21) <= LFSR_2(5) xor LFSR_2(9) xor LFSR_2(10) xor LFSR_2(13) xor LFSR_2(17) xor LFSR_2(18) xor LFSR_2(22) xor LFSR_2(24) xor LFSR_2(26) xor LFSR_2(27) xor LFSR_2(29) xor LFSR_2(31) xor data_in(5) xor data_in(9) xor data_in(10) xor data_in(13) xor data_in(17) xor data_in(18) xor data_in(22) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_2(22) <= LFSR_2(0) xor LFSR_2(9) xor LFSR_2(11) xor LFSR_2(12) xor LFSR_2(14) xor LFSR_2(16) xor LFSR_2(18) xor LFSR_2(19) xor LFSR_2(23) xor LFSR_2(24) xor LFSR_2(26) xor LFSR_2(27) xor LFSR_2(29) xor LFSR_2(31) xor data_in(0) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(14) xor data_in(16) xor data_in(18) xor data_in(19) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_2(23) <= LFSR_2(0) xor LFSR_2(1) xor LFSR_2(6) xor LFSR_2(9) xor LFSR_2(13) xor LFSR_2(15) xor LFSR_2(16) xor LFSR_2(17) xor LFSR_2(19) xor LFSR_2(20) xor LFSR_2(26) xor LFSR_2(27) xor LFSR_2(29) xor LFSR_2(31) xor data_in(0) xor data_in(1) xor data_in(6) xor data_in(9) xor data_in(13) xor data_in(15) xor data_in(16) xor data_in(17) xor data_in(19) xor data_in(20) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_2(24) <= LFSR_2(1) xor LFSR_2(2) xor LFSR_2(7) xor LFSR_2(10) xor LFSR_2(14) xor LFSR_2(16) xor LFSR_2(17) xor LFSR_2(18) xor LFSR_2(20) xor LFSR_2(21) xor LFSR_2(27) xor LFSR_2(28) xor LFSR_2(30) xor data_in(1) xor data_in(2) xor data_in(7) xor data_in(10) xor data_in(14) xor data_in(16) xor data_in(17) xor data_in(18) xor data_in(20) xor data_in(21) xor data_in(27) xor data_in(28) xor data_in(30);
					CRC32_2(25) <= LFSR_2(2) xor LFSR_2(3) xor LFSR_2(8) xor LFSR_2(11) xor LFSR_2(15) xor LFSR_2(17) xor LFSR_2(18) xor LFSR_2(19) xor LFSR_2(21) xor LFSR_2(22) xor LFSR_2(28) xor LFSR_2(29) xor LFSR_2(31) xor data_in(2) xor data_in(3) xor data_in(8) xor data_in(11) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(19) xor data_in(21) xor data_in(22) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_2(26) <= LFSR_2(0) xor LFSR_2(3) xor LFSR_2(4) xor LFSR_2(6) xor LFSR_2(10) xor LFSR_2(18) xor LFSR_2(19) xor LFSR_2(20) xor LFSR_2(22) xor LFSR_2(23) xor LFSR_2(24) xor LFSR_2(25) xor LFSR_2(26) xor LFSR_2(28) xor LFSR_2(31) xor data_in(0) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(10) xor data_in(18) xor data_in(19) xor data_in(20) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(31);
					CRC32_2(27) <= LFSR_2(1) xor LFSR_2(4) xor LFSR_2(5) xor LFSR_2(7) xor LFSR_2(11) xor LFSR_2(19) xor LFSR_2(20) xor LFSR_2(21) xor LFSR_2(23) xor LFSR_2(24) xor LFSR_2(25) xor LFSR_2(26) xor LFSR_2(27) xor LFSR_2(29) xor data_in(1) xor data_in(4) xor data_in(5) xor data_in(7) xor data_in(11) xor data_in(19) xor data_in(20) xor data_in(21) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(29);
					CRC32_2(28) <= LFSR_2(2) xor LFSR_2(5) xor LFSR_2(6) xor LFSR_2(8) xor LFSR_2(12) xor LFSR_2(20) xor LFSR_2(21) xor LFSR_2(22) xor LFSR_2(24) xor LFSR_2(25) xor LFSR_2(26) xor LFSR_2(27) xor LFSR_2(28) xor LFSR_2(30) xor data_in(2) xor data_in(5) xor data_in(6) xor data_in(8) xor data_in(12) xor data_in(20) xor data_in(21) xor data_in(22) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(30);
					CRC32_2(29) <= LFSR_2(3) xor LFSR_2(6) xor LFSR_2(7) xor LFSR_2(9) xor LFSR_2(13) xor LFSR_2(21) xor LFSR_2(22) xor LFSR_2(23) xor LFSR_2(25) xor LFSR_2(26) xor LFSR_2(27) xor LFSR_2(28) xor LFSR_2(29) xor LFSR_2(31) xor data_in(3) xor data_in(6) xor data_in(7) xor data_in(9) xor data_in(13) xor data_in(21) xor data_in(22) xor data_in(23) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_2(30) <= LFSR_2(4) xor LFSR_2(7) xor LFSR_2(8) xor LFSR_2(10) xor LFSR_2(14) xor LFSR_2(22) xor LFSR_2(23) xor LFSR_2(24) xor LFSR_2(26) xor LFSR_2(27) xor LFSR_2(28) xor LFSR_2(29) xor LFSR_2(30) xor data_in(4) xor data_in(7) xor data_in(8) xor data_in(10) xor data_in(14) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(30);
					CRC32_2(31) <= LFSR_2(5) xor LFSR_2(8) xor LFSR_2(9) xor LFSR_2(11) xor LFSR_2(15) xor LFSR_2(23) xor LFSR_2(24) xor LFSR_2(25) xor LFSR_2(27) xor LFSR_2(28) xor LFSR_2(29) xor LFSR_2(30) xor LFSR_2(31) xor data_in(5) xor data_in(8) xor data_in(9) xor data_in(11) xor data_in(15) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(30) xor data_in(31);
				end if;
			end if;
	end process;
	
	-- Вычислитель №3
	process (clk)
		begin
			if rising_edge(clk) then
				if enable_CRC32_3 then
					-- Вычисление CRC32_3 с использованием LFSR_3
					CRC32_3(0) <= LFSR_3(0) xor LFSR_3(6) xor LFSR_3(9) xor LFSR_3(10) xor LFSR_3(12) xor LFSR_3(16) xor LFSR_3(24) xor LFSR_3(25) xor LFSR_3(26) xor LFSR_3(28) xor LFSR_3(29) xor LFSR_3(30) xor LFSR_3(31) xor data_in(0) xor data_in(6) xor data_in(9) xor data_in(10) xor data_in(12) xor data_in(16) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(29) xor data_in(30) xor data_in(31);
					CRC32_3(1) <= LFSR_3(0) xor LFSR_3(1) xor LFSR_3(6) xor LFSR_3(7) xor LFSR_3(9) xor LFSR_3(11) xor LFSR_3(12) xor LFSR_3(13) xor LFSR_3(16) xor LFSR_3(17) xor LFSR_3(24) xor LFSR_3(27) xor LFSR_3(28) xor data_in(0) xor data_in(1) xor data_in(6) xor data_in(7) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(13) xor data_in(16) xor data_in(17) xor data_in(24) xor data_in(27) xor data_in(28);
					CRC32_3(2) <= LFSR_3(0) xor LFSR_3(1) xor LFSR_3(2) xor LFSR_3(6) xor LFSR_3(7) xor LFSR_3(8) xor LFSR_3(9) xor LFSR_3(13) xor LFSR_3(14) xor LFSR_3(16) xor LFSR_3(17) xor LFSR_3(18) xor LFSR_3(24) xor LFSR_3(26) xor LFSR_3(30) xor LFSR_3(31) xor data_in(0) xor data_in(1) xor data_in(2) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(17) xor data_in(18) xor data_in(24) xor data_in(26) xor data_in(30) xor data_in(31);
					CRC32_3(3) <= LFSR_3(1) xor LFSR_3(2) xor LFSR_3(3) xor LFSR_3(7) xor LFSR_3(8) xor LFSR_3(9) xor LFSR_3(10) xor LFSR_3(14) xor LFSR_3(15) xor LFSR_3(17) xor LFSR_3(18) xor LFSR_3(19) xor LFSR_3(25) xor LFSR_3(27) xor LFSR_3(31) xor data_in(1) xor data_in(2) xor data_in(3) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(10) xor data_in(14) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(19) xor data_in(25) xor data_in(27) xor data_in(31);
					CRC32_3(4) <= LFSR_3(0) xor LFSR_3(2) xor LFSR_3(3) xor LFSR_3(4) xor LFSR_3(6) xor LFSR_3(8) xor LFSR_3(11) xor LFSR_3(12) xor LFSR_3(15) xor LFSR_3(18) xor LFSR_3(19) xor LFSR_3(20) xor LFSR_3(24) xor LFSR_3(25) xor LFSR_3(29) xor LFSR_3(30) xor LFSR_3(31) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(8) xor data_in(11) xor data_in(12) xor data_in(15) xor data_in(18) xor data_in(19) xor data_in(20) xor data_in(24) xor data_in(25) xor data_in(29) xor data_in(30) xor data_in(31);
					CRC32_3(5) <= LFSR_3(0) xor LFSR_3(1) xor LFSR_3(3) xor LFSR_3(4) xor LFSR_3(5) xor LFSR_3(6) xor LFSR_3(7) xor LFSR_3(10) xor LFSR_3(13) xor LFSR_3(19) xor LFSR_3(20) xor LFSR_3(21) xor LFSR_3(24) xor LFSR_3(28) xor LFSR_3(29) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(13) xor data_in(19) xor data_in(20) xor data_in(21) xor data_in(24) xor data_in(28) xor data_in(29);
					CRC32_3(6) <= LFSR_3(1) xor LFSR_3(2) xor LFSR_3(4) xor LFSR_3(5) xor LFSR_3(6) xor LFSR_3(7) xor LFSR_3(8) xor LFSR_3(11) xor LFSR_3(14) xor LFSR_3(20) xor LFSR_3(21) xor LFSR_3(22) xor LFSR_3(25) xor LFSR_3(29) xor LFSR_3(30) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(14) xor data_in(20) xor data_in(21) xor data_in(22) xor data_in(25) xor data_in(29) xor data_in(30);
					CRC32_3(7) <= LFSR_3(0) xor LFSR_3(2) xor LFSR_3(3) xor LFSR_3(5) xor LFSR_3(7) xor LFSR_3(8) xor LFSR_3(10) xor LFSR_3(15) xor LFSR_3(16) xor LFSR_3(21) xor LFSR_3(22) xor LFSR_3(23) xor LFSR_3(24) xor LFSR_3(25) xor LFSR_3(28) xor LFSR_3(29) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(7) xor data_in(8) xor data_in(10) xor data_in(15) xor data_in(16) xor data_in(21) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(28) xor data_in(29);
					CRC32_3(8) <= LFSR_3(0) xor LFSR_3(1) xor LFSR_3(3) xor LFSR_3(4) xor LFSR_3(8) xor LFSR_3(10) xor LFSR_3(11) xor LFSR_3(12) xor LFSR_3(17) xor LFSR_3(22) xor LFSR_3(23) xor LFSR_3(28) xor LFSR_3(31) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(8) xor data_in(10) xor data_in(11) xor data_in(12) xor data_in(17) xor data_in(22) xor data_in(23) xor data_in(28) xor data_in(31);
					CRC32_3(9) <= LFSR_3(1) xor LFSR_3(2) xor LFSR_3(4) xor LFSR_3(5) xor LFSR_3(9) xor LFSR_3(11) xor LFSR_3(12) xor LFSR_3(13) xor LFSR_3(18) xor LFSR_3(23) xor LFSR_3(24) xor LFSR_3(29) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(13) xor data_in(18) xor data_in(23) xor data_in(24) xor data_in(29);
					CRC32_3(10) <= LFSR_3(0) xor LFSR_3(2) xor LFSR_3(3) xor LFSR_3(5) xor LFSR_3(9) xor LFSR_3(13) xor LFSR_3(14) xor LFSR_3(16) xor LFSR_3(19) xor LFSR_3(26) xor LFSR_3(28) xor LFSR_3(29) xor LFSR_3(31) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(19) xor data_in(26) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_3(11) <= LFSR_3(0) xor LFSR_3(1) xor LFSR_3(3) xor LFSR_3(4) xor LFSR_3(9) xor LFSR_3(12) xor LFSR_3(14) xor LFSR_3(15) xor LFSR_3(16) xor LFSR_3(17) xor LFSR_3(20) xor LFSR_3(24) xor LFSR_3(25) xor LFSR_3(26) xor LFSR_3(27) xor LFSR_3(28) xor LFSR_3(31) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(9) xor data_in(12) xor data_in(14) xor data_in(15) xor data_in(16) xor data_in(17) xor data_in(20) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(31);
					CRC32_3(12) <= LFSR_3(0) xor LFSR_3(1) xor LFSR_3(2) xor LFSR_3(4) xor LFSR_3(5) xor LFSR_3(6) xor LFSR_3(9) xor LFSR_3(12) xor LFSR_3(13) xor LFSR_3(15) xor LFSR_3(17) xor LFSR_3(18) xor LFSR_3(21) xor LFSR_3(24) xor LFSR_3(27) xor LFSR_3(30) xor LFSR_3(31) xor data_in(0) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(9) xor data_in(12) xor data_in(13) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(21) xor data_in(24) xor data_in(27) xor data_in(30) xor data_in(31);
					CRC32_3(13) <= LFSR_3(1) xor LFSR_3(2) xor LFSR_3(3) xor LFSR_3(5) xor LFSR_3(6) xor LFSR_3(7) xor LFSR_3(10) xor LFSR_3(13) xor LFSR_3(14) xor LFSR_3(16) xor LFSR_3(18) xor LFSR_3(19) xor LFSR_3(22) xor LFSR_3(25) xor LFSR_3(28) xor LFSR_3(31) xor data_in(1) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(18) xor data_in(19) xor data_in(22) xor data_in(25) xor data_in(28) xor data_in(31);
					CRC32_3(14) <= LFSR_3(2) xor LFSR_3(3) xor LFSR_3(4) xor LFSR_3(6) xor LFSR_3(7) xor LFSR_3(8) xor LFSR_3(11) xor LFSR_3(14) xor LFSR_3(15) xor LFSR_3(17) xor LFSR_3(19) xor LFSR_3(20) xor LFSR_3(23) xor LFSR_3(26) xor LFSR_3(29) xor data_in(2) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(14) xor data_in(15) xor data_in(17) xor data_in(19) xor data_in(20) xor data_in(23) xor data_in(26) xor data_in(29);
					CRC32_3(15) <= LFSR_3(3) xor LFSR_3(4) xor LFSR_3(5) xor LFSR_3(7) xor LFSR_3(8) xor LFSR_3(9) xor LFSR_3(12) xor LFSR_3(15) xor LFSR_3(16) xor LFSR_3(18) xor LFSR_3(20) xor LFSR_3(21) xor LFSR_3(24) xor LFSR_3(27) xor LFSR_3(30) xor data_in(3) xor data_in(4) xor data_in(5) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(12) xor data_in(15) xor data_in(16) xor data_in(18) xor data_in(20) xor data_in(21) xor data_in(24) xor data_in(27) xor data_in(30);
					CRC32_3(16) <= LFSR_3(0) xor LFSR_3(4) xor LFSR_3(5) xor LFSR_3(8) xor LFSR_3(12) xor LFSR_3(13) xor LFSR_3(17) xor LFSR_3(19) xor LFSR_3(21) xor LFSR_3(22) xor LFSR_3(24) xor LFSR_3(26) xor LFSR_3(29) xor LFSR_3(30) xor data_in(0) xor data_in(4) xor data_in(5) xor data_in(8) xor data_in(12) xor data_in(13) xor data_in(17) xor data_in(19) xor data_in(21) xor data_in(22) xor data_in(24) xor data_in(26) xor data_in(29) xor data_in(30);
					CRC32_3(17) <= LFSR_3(1) xor LFSR_3(5) xor LFSR_3(6) xor LFSR_3(9) xor LFSR_3(13) xor LFSR_3(14) xor LFSR_3(18) xor LFSR_3(20) xor LFSR_3(22) xor LFSR_3(23) xor LFSR_3(25) xor LFSR_3(27) xor LFSR_3(30) xor LFSR_3(31) xor data_in(1) xor data_in(5) xor data_in(6) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(18) xor data_in(20) xor data_in(22) xor data_in(23) xor data_in(25) xor data_in(27) xor data_in(30) xor data_in(31);
					CRC32_3(18) <= LFSR_3(2) xor LFSR_3(6) xor LFSR_3(7) xor LFSR_3(10) xor LFSR_3(14) xor LFSR_3(15) xor LFSR_3(19) xor LFSR_3(21) xor LFSR_3(23) xor LFSR_3(24) xor LFSR_3(26) xor LFSR_3(28) xor LFSR_3(31) xor data_in(2) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(14) xor data_in(15) xor data_in(19) xor data_in(21) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(28) xor data_in(31);
					CRC32_3(19) <= LFSR_3(3) xor LFSR_3(7) xor LFSR_3(8) xor LFSR_3(11) xor LFSR_3(15) xor LFSR_3(16) xor LFSR_3(20) xor LFSR_3(22) xor LFSR_3(24) xor LFSR_3(25) xor LFSR_3(27) xor LFSR_3(29) xor data_in(3) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(15) xor data_in(16) xor data_in(20) xor data_in(22) xor data_in(24) xor data_in(25) xor data_in(27) xor data_in(29);
					CRC32_3(20) <= LFSR_3(4) xor LFSR_3(8) xor LFSR_3(9) xor LFSR_3(12) xor LFSR_3(16) xor LFSR_3(17) xor LFSR_3(21) xor LFSR_3(23) xor LFSR_3(25) xor LFSR_3(26) xor LFSR_3(28) xor LFSR_3(30) xor data_in(4) xor data_in(8) xor data_in(9) xor data_in(12) xor data_in(16) xor data_in(17) xor data_in(21) xor data_in(23) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(30);
					CRC32_3(21) <= LFSR_3(5) xor LFSR_3(9) xor LFSR_3(10) xor LFSR_3(13) xor LFSR_3(17) xor LFSR_3(18) xor LFSR_3(22) xor LFSR_3(24) xor LFSR_3(26) xor LFSR_3(27) xor LFSR_3(29) xor LFSR_3(31) xor data_in(5) xor data_in(9) xor data_in(10) xor data_in(13) xor data_in(17) xor data_in(18) xor data_in(22) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_3(22) <= LFSR_3(0) xor LFSR_3(9) xor LFSR_3(11) xor LFSR_3(12) xor LFSR_3(14) xor LFSR_3(16) xor LFSR_3(18) xor LFSR_3(19) xor LFSR_3(23) xor LFSR_3(24) xor LFSR_3(26) xor LFSR_3(27) xor LFSR_3(29) xor LFSR_3(31) xor data_in(0) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(14) xor data_in(16) xor data_in(18) xor data_in(19) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_3(23) <= LFSR_3(0) xor LFSR_3(1) xor LFSR_3(6) xor LFSR_3(9) xor LFSR_3(13) xor LFSR_3(15) xor LFSR_3(16) xor LFSR_3(17) xor LFSR_3(19) xor LFSR_3(20) xor LFSR_3(26) xor LFSR_3(27) xor LFSR_3(29) xor LFSR_3(31) xor data_in(0) xor data_in(1) xor data_in(6) xor data_in(9) xor data_in(13) xor data_in(15) xor data_in(16) xor data_in(17) xor data_in(19) xor data_in(20) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_3(24) <= LFSR_3(1) xor LFSR_3(2) xor LFSR_3(7) xor LFSR_3(10) xor LFSR_3(14) xor LFSR_3(16) xor LFSR_3(17) xor LFSR_3(18) xor LFSR_3(20) xor LFSR_3(21) xor LFSR_3(27) xor LFSR_3(28) xor LFSR_3(30) xor data_in(1) xor data_in(2) xor data_in(7) xor data_in(10) xor data_in(14) xor data_in(16) xor data_in(17) xor data_in(18) xor data_in(20) xor data_in(21) xor data_in(27) xor data_in(28) xor data_in(30);
					CRC32_3(25) <= LFSR_3(2) xor LFSR_3(3) xor LFSR_3(8) xor LFSR_3(11) xor LFSR_3(15) xor LFSR_3(17) xor LFSR_3(18) xor LFSR_3(19) xor LFSR_3(21) xor LFSR_3(22) xor LFSR_3(28) xor LFSR_3(29) xor LFSR_3(31) xor data_in(2) xor data_in(3) xor data_in(8) xor data_in(11) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(19) xor data_in(21) xor data_in(22) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_3(26) <= LFSR_3(0) xor LFSR_3(3) xor LFSR_3(4) xor LFSR_3(6) xor LFSR_3(10) xor LFSR_3(18) xor LFSR_3(19) xor LFSR_3(20) xor LFSR_3(22) xor LFSR_3(23) xor LFSR_3(24) xor LFSR_3(25) xor LFSR_3(26) xor LFSR_3(28) xor LFSR_3(31) xor data_in(0) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(10) xor data_in(18) xor data_in(19) xor data_in(20) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(31);
					CRC32_3(27) <= LFSR_3(1) xor LFSR_3(4) xor LFSR_3(5) xor LFSR_3(7) xor LFSR_3(11) xor LFSR_3(19) xor LFSR_3(20) xor LFSR_3(21) xor LFSR_3(23) xor LFSR_3(24) xor LFSR_3(25) xor LFSR_3(26) xor LFSR_3(27) xor LFSR_3(29) xor data_in(1) xor data_in(4) xor data_in(5) xor data_in(7) xor data_in(11) xor data_in(19) xor data_in(20) xor data_in(21) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(29);
					CRC32_3(28) <= LFSR_3(2) xor LFSR_3(5) xor LFSR_3(6) xor LFSR_3(8) xor LFSR_3(12) xor LFSR_3(20) xor LFSR_3(21) xor LFSR_3(22) xor LFSR_3(24) xor LFSR_3(25) xor LFSR_3(26) xor LFSR_3(27) xor LFSR_3(28) xor LFSR_3(30) xor data_in(2) xor data_in(5) xor data_in(6) xor data_in(8) xor data_in(12) xor data_in(20) xor data_in(21) xor data_in(22) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(30);
					CRC32_3(29) <= LFSR_3(3) xor LFSR_3(6) xor LFSR_3(7) xor LFSR_3(9) xor LFSR_3(13) xor LFSR_3(21) xor LFSR_3(22) xor LFSR_3(23) xor LFSR_3(25) xor LFSR_3(26) xor LFSR_3(27) xor LFSR_3(28) xor LFSR_3(29) xor LFSR_3(31) xor data_in(3) xor data_in(6) xor data_in(7) xor data_in(9) xor data_in(13) xor data_in(21) xor data_in(22) xor data_in(23) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_3(30) <= LFSR_3(4) xor LFSR_3(7) xor LFSR_3(8) xor LFSR_3(10) xor LFSR_3(14) xor LFSR_3(22) xor LFSR_3(23) xor LFSR_3(24) xor LFSR_3(26) xor LFSR_3(27) xor LFSR_3(28) xor LFSR_3(29) xor LFSR_3(30) xor data_in(4) xor data_in(7) xor data_in(8) xor data_in(10) xor data_in(14) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(30);
					CRC32_3(31) <= LFSR_3(5) xor LFSR_3(8) xor LFSR_3(9) xor LFSR_3(11) xor LFSR_3(15) xor LFSR_3(23) xor LFSR_3(24) xor LFSR_3(25) xor LFSR_3(27) xor LFSR_3(28) xor LFSR_3(29) xor LFSR_3(30) xor LFSR_3(31) xor data_in(5) xor data_in(8) xor data_in(9) xor data_in(11) xor data_in(15) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(30) xor data_in(31);
				end if;
			end if;
	end process;
	
	-- Вычислитель №4
	process (clk)
		begin
			if rising_edge(clk) then
				if enable_CRC32_4 then
					-- Вычисление CRC32_4 с использованием LFSR_4
					CRC32_4(0) <= LFSR_4(0) xor LFSR_4(6) xor LFSR_4(9) xor LFSR_4(10) xor LFSR_4(12) xor LFSR_4(16) xor LFSR_4(24) xor LFSR_4(25) xor LFSR_4(26) xor LFSR_4(28) xor LFSR_4(29) xor LFSR_4(30) xor LFSR_4(31) xor data_in(0) xor data_in(6) xor data_in(9) xor data_in(10) xor data_in(12) xor data_in(16) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(29) xor data_in(30) xor data_in(31);
					CRC32_4(1) <= LFSR_4(0) xor LFSR_4(1) xor LFSR_4(6) xor LFSR_4(7) xor LFSR_4(9) xor LFSR_4(11) xor LFSR_4(12) xor LFSR_4(13) xor LFSR_4(16) xor LFSR_4(17) xor LFSR_4(24) xor LFSR_4(27) xor LFSR_4(28) xor data_in(0) xor data_in(1) xor data_in(6) xor data_in(7) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(13) xor data_in(16) xor data_in(17) xor data_in(24) xor data_in(27) xor data_in(28);
					CRC32_4(2) <= LFSR_4(0) xor LFSR_4(1) xor LFSR_4(2) xor LFSR_4(6) xor LFSR_4(7) xor LFSR_4(8) xor LFSR_4(9) xor LFSR_4(13) xor LFSR_4(14) xor LFSR_4(16) xor LFSR_4(17) xor LFSR_4(18) xor LFSR_4(24) xor LFSR_4(26) xor LFSR_4(30) xor LFSR_4(31) xor data_in(0) xor data_in(1) xor data_in(2) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(17) xor data_in(18) xor data_in(24) xor data_in(26) xor data_in(30) xor data_in(31);
					CRC32_4(3) <= LFSR_4(1) xor LFSR_4(2) xor LFSR_4(3) xor LFSR_4(7) xor LFSR_4(8) xor LFSR_4(9) xor LFSR_4(10) xor LFSR_4(14) xor LFSR_4(15) xor LFSR_4(17) xor LFSR_4(18) xor LFSR_4(19) xor LFSR_4(25) xor LFSR_4(27) xor LFSR_4(31) xor data_in(1) xor data_in(2) xor data_in(3) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(10) xor data_in(14) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(19) xor data_in(25) xor data_in(27) xor data_in(31);
					CRC32_4(4) <= LFSR_4(0) xor LFSR_4(2) xor LFSR_4(3) xor LFSR_4(4) xor LFSR_4(6) xor LFSR_4(8) xor LFSR_4(11) xor LFSR_4(12) xor LFSR_4(15) xor LFSR_4(18) xor LFSR_4(19) xor LFSR_4(20) xor LFSR_4(24) xor LFSR_4(25) xor LFSR_4(29) xor LFSR_4(30) xor LFSR_4(31) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(8) xor data_in(11) xor data_in(12) xor data_in(15) xor data_in(18) xor data_in(19) xor data_in(20) xor data_in(24) xor data_in(25) xor data_in(29) xor data_in(30) xor data_in(31);
					CRC32_4(5) <= LFSR_4(0) xor LFSR_4(1) xor LFSR_4(3) xor LFSR_4(4) xor LFSR_4(5) xor LFSR_4(6) xor LFSR_4(7) xor LFSR_4(10) xor LFSR_4(13) xor LFSR_4(19) xor LFSR_4(20) xor LFSR_4(21) xor LFSR_4(24) xor LFSR_4(28) xor LFSR_4(29) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(13) xor data_in(19) xor data_in(20) xor data_in(21) xor data_in(24) xor data_in(28) xor data_in(29);
					CRC32_4(6) <= LFSR_4(1) xor LFSR_4(2) xor LFSR_4(4) xor LFSR_4(5) xor LFSR_4(6) xor LFSR_4(7) xor LFSR_4(8) xor LFSR_4(11) xor LFSR_4(14) xor LFSR_4(20) xor LFSR_4(21) xor LFSR_4(22) xor LFSR_4(25) xor LFSR_4(29) xor LFSR_4(30) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(14) xor data_in(20) xor data_in(21) xor data_in(22) xor data_in(25) xor data_in(29) xor data_in(30);
					CRC32_4(7) <= LFSR_4(0) xor LFSR_4(2) xor LFSR_4(3) xor LFSR_4(5) xor LFSR_4(7) xor LFSR_4(8) xor LFSR_4(10) xor LFSR_4(15) xor LFSR_4(16) xor LFSR_4(21) xor LFSR_4(22) xor LFSR_4(23) xor LFSR_4(24) xor LFSR_4(25) xor LFSR_4(28) xor LFSR_4(29) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(7) xor data_in(8) xor data_in(10) xor data_in(15) xor data_in(16) xor data_in(21) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(28) xor data_in(29);
					CRC32_4(8) <= LFSR_4(0) xor LFSR_4(1) xor LFSR_4(3) xor LFSR_4(4) xor LFSR_4(8) xor LFSR_4(10) xor LFSR_4(11) xor LFSR_4(12) xor LFSR_4(17) xor LFSR_4(22) xor LFSR_4(23) xor LFSR_4(28) xor LFSR_4(31) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(8) xor data_in(10) xor data_in(11) xor data_in(12) xor data_in(17) xor data_in(22) xor data_in(23) xor data_in(28) xor data_in(31);
					CRC32_4(9) <= LFSR_4(1) xor LFSR_4(2) xor LFSR_4(4) xor LFSR_4(5) xor LFSR_4(9) xor LFSR_4(11) xor LFSR_4(12) xor LFSR_4(13) xor LFSR_4(18) xor LFSR_4(23) xor LFSR_4(24) xor LFSR_4(29) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(13) xor data_in(18) xor data_in(23) xor data_in(24) xor data_in(29);
					CRC32_4(10) <= LFSR_4(0) xor LFSR_4(2) xor LFSR_4(3) xor LFSR_4(5) xor LFSR_4(9) xor LFSR_4(13) xor LFSR_4(14) xor LFSR_4(16) xor LFSR_4(19) xor LFSR_4(26) xor LFSR_4(28) xor LFSR_4(29) xor LFSR_4(31) xor data_in(0) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(19) xor data_in(26) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_4(11) <= LFSR_4(0) xor LFSR_4(1) xor LFSR_4(3) xor LFSR_4(4) xor LFSR_4(9) xor LFSR_4(12) xor LFSR_4(14) xor LFSR_4(15) xor LFSR_4(16) xor LFSR_4(17) xor LFSR_4(20) xor LFSR_4(24) xor LFSR_4(25) xor LFSR_4(26) xor LFSR_4(27) xor LFSR_4(28) xor LFSR_4(31) xor data_in(0) xor data_in(1) xor data_in(3) xor data_in(4) xor data_in(9) xor data_in(12) xor data_in(14) xor data_in(15) xor data_in(16) xor data_in(17) xor data_in(20) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(31);
					CRC32_4(12) <= LFSR_4(0) xor LFSR_4(1) xor LFSR_4(2) xor LFSR_4(4) xor LFSR_4(5) xor LFSR_4(6) xor LFSR_4(9) xor LFSR_4(12) xor LFSR_4(13) xor LFSR_4(15) xor LFSR_4(17) xor LFSR_4(18) xor LFSR_4(21) xor LFSR_4(24) xor LFSR_4(27) xor LFSR_4(30) xor LFSR_4(31) xor data_in(0) xor data_in(1) xor data_in(2) xor data_in(4) xor data_in(5) xor data_in(6) xor data_in(9) xor data_in(12) xor data_in(13) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(21) xor data_in(24) xor data_in(27) xor data_in(30) xor data_in(31);
					CRC32_4(13) <= LFSR_4(1) xor LFSR_4(2) xor LFSR_4(3) xor LFSR_4(5) xor LFSR_4(6) xor LFSR_4(7) xor LFSR_4(10) xor LFSR_4(13) xor LFSR_4(14) xor LFSR_4(16) xor LFSR_4(18) xor LFSR_4(19) xor LFSR_4(22) xor LFSR_4(25) xor LFSR_4(28) xor LFSR_4(31) xor data_in(1) xor data_in(2) xor data_in(3) xor data_in(5) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(13) xor data_in(14) xor data_in(16) xor data_in(18) xor data_in(19) xor data_in(22) xor data_in(25) xor data_in(28) xor data_in(31);
					CRC32_4(14) <= LFSR_4(2) xor LFSR_4(3) xor LFSR_4(4) xor LFSR_4(6) xor LFSR_4(7) xor LFSR_4(8) xor LFSR_4(11) xor LFSR_4(14) xor LFSR_4(15) xor LFSR_4(17) xor LFSR_4(19) xor LFSR_4(20) xor LFSR_4(23) xor LFSR_4(26) xor LFSR_4(29) xor data_in(2) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(14) xor data_in(15) xor data_in(17) xor data_in(19) xor data_in(20) xor data_in(23) xor data_in(26) xor data_in(29);
					CRC32_4(15) <= LFSR_4(3) xor LFSR_4(4) xor LFSR_4(5) xor LFSR_4(7) xor LFSR_4(8) xor LFSR_4(9) xor LFSR_4(12) xor LFSR_4(15) xor LFSR_4(16) xor LFSR_4(18) xor LFSR_4(20) xor LFSR_4(21) xor LFSR_4(24) xor LFSR_4(27) xor LFSR_4(30) xor data_in(3) xor data_in(4) xor data_in(5) xor data_in(7) xor data_in(8) xor data_in(9) xor data_in(12) xor data_in(15) xor data_in(16) xor data_in(18) xor data_in(20) xor data_in(21) xor data_in(24) xor data_in(27) xor data_in(30);
					CRC32_4(16) <= LFSR_4(0) xor LFSR_4(4) xor LFSR_4(5) xor LFSR_4(8) xor LFSR_4(12) xor LFSR_4(13) xor LFSR_4(17) xor LFSR_4(19) xor LFSR_4(21) xor LFSR_4(22) xor LFSR_4(24) xor LFSR_4(26) xor LFSR_4(29) xor LFSR_4(30) xor data_in(0) xor data_in(4) xor data_in(5) xor data_in(8) xor data_in(12) xor data_in(13) xor data_in(17) xor data_in(19) xor data_in(21) xor data_in(22) xor data_in(24) xor data_in(26) xor data_in(29) xor data_in(30);
					CRC32_4(17) <= LFSR_4(1) xor LFSR_4(5) xor LFSR_4(6) xor LFSR_4(9) xor LFSR_4(13) xor LFSR_4(14) xor LFSR_4(18) xor LFSR_4(20) xor LFSR_4(22) xor LFSR_4(23) xor LFSR_4(25) xor LFSR_4(27) xor LFSR_4(30) xor LFSR_4(31) xor data_in(1) xor data_in(5) xor data_in(6) xor data_in(9) xor data_in(13) xor data_in(14) xor data_in(18) xor data_in(20) xor data_in(22) xor data_in(23) xor data_in(25) xor data_in(27) xor data_in(30) xor data_in(31);
					CRC32_4(18) <= LFSR_4(2) xor LFSR_4(6) xor LFSR_4(7) xor LFSR_4(10) xor LFSR_4(14) xor LFSR_4(15) xor LFSR_4(19) xor LFSR_4(21) xor LFSR_4(23) xor LFSR_4(24) xor LFSR_4(26) xor LFSR_4(28) xor LFSR_4(31) xor data_in(2) xor data_in(6) xor data_in(7) xor data_in(10) xor data_in(14) xor data_in(15) xor data_in(19) xor data_in(21) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(28) xor data_in(31);
					CRC32_4(19) <= LFSR_4(3) xor LFSR_4(7) xor LFSR_4(8) xor LFSR_4(11) xor LFSR_4(15) xor LFSR_4(16) xor LFSR_4(20) xor LFSR_4(22) xor LFSR_4(24) xor LFSR_4(25) xor LFSR_4(27) xor LFSR_4(29) xor data_in(3) xor data_in(7) xor data_in(8) xor data_in(11) xor data_in(15) xor data_in(16) xor data_in(20) xor data_in(22) xor data_in(24) xor data_in(25) xor data_in(27) xor data_in(29);
					CRC32_4(20) <= LFSR_4(4) xor LFSR_4(8) xor LFSR_4(9) xor LFSR_4(12) xor LFSR_4(16) xor LFSR_4(17) xor LFSR_4(21) xor LFSR_4(23) xor LFSR_4(25) xor LFSR_4(26) xor LFSR_4(28) xor LFSR_4(30) xor data_in(4) xor data_in(8) xor data_in(9) xor data_in(12) xor data_in(16) xor data_in(17) xor data_in(21) xor data_in(23) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(30);
					CRC32_4(21) <= LFSR_4(5) xor LFSR_4(9) xor LFSR_4(10) xor LFSR_4(13) xor LFSR_4(17) xor LFSR_4(18) xor LFSR_4(22) xor LFSR_4(24) xor LFSR_4(26) xor LFSR_4(27) xor LFSR_4(29) xor LFSR_4(31) xor data_in(5) xor data_in(9) xor data_in(10) xor data_in(13) xor data_in(17) xor data_in(18) xor data_in(22) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_4(22) <= LFSR_4(0) xor LFSR_4(9) xor LFSR_4(11) xor LFSR_4(12) xor LFSR_4(14) xor LFSR_4(16) xor LFSR_4(18) xor LFSR_4(19) xor LFSR_4(23) xor LFSR_4(24) xor LFSR_4(26) xor LFSR_4(27) xor LFSR_4(29) xor LFSR_4(31) xor data_in(0) xor data_in(9) xor data_in(11) xor data_in(12) xor data_in(14) xor data_in(16) xor data_in(18) xor data_in(19) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_4(23) <= LFSR_4(0) xor LFSR_4(1) xor LFSR_4(6) xor LFSR_4(9) xor LFSR_4(13) xor LFSR_4(15) xor LFSR_4(16) xor LFSR_4(17) xor LFSR_4(19) xor LFSR_4(20) xor LFSR_4(26) xor LFSR_4(27) xor LFSR_4(29) xor LFSR_4(31) xor data_in(0) xor data_in(1) xor data_in(6) xor data_in(9) xor data_in(13) xor data_in(15) xor data_in(16) xor data_in(17) xor data_in(19) xor data_in(20) xor data_in(26) xor data_in(27) xor data_in(29) xor data_in(31);
					CRC32_4(24) <= LFSR_4(1) xor LFSR_4(2) xor LFSR_4(7) xor LFSR_4(10) xor LFSR_4(14) xor LFSR_4(16) xor LFSR_4(17) xor LFSR_4(18) xor LFSR_4(20) xor LFSR_4(21) xor LFSR_4(27) xor LFSR_4(28) xor LFSR_4(30) xor data_in(1) xor data_in(2) xor data_in(7) xor data_in(10) xor data_in(14) xor data_in(16) xor data_in(17) xor data_in(18) xor data_in(20) xor data_in(21) xor data_in(27) xor data_in(28) xor data_in(30);
					CRC32_4(25) <= LFSR_4(2) xor LFSR_4(3) xor LFSR_4(8) xor LFSR_4(11) xor LFSR_4(15) xor LFSR_4(17) xor LFSR_4(18) xor LFSR_4(19) xor LFSR_4(21) xor LFSR_4(22) xor LFSR_4(28) xor LFSR_4(29) xor LFSR_4(31) xor data_in(2) xor data_in(3) xor data_in(8) xor data_in(11) xor data_in(15) xor data_in(17) xor data_in(18) xor data_in(19) xor data_in(21) xor data_in(22) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_4(26) <= LFSR_4(0) xor LFSR_4(3) xor LFSR_4(4) xor LFSR_4(6) xor LFSR_4(10) xor LFSR_4(18) xor LFSR_4(19) xor LFSR_4(20) xor LFSR_4(22) xor LFSR_4(23) xor LFSR_4(24) xor LFSR_4(25) xor LFSR_4(26) xor LFSR_4(28) xor LFSR_4(31) xor data_in(0) xor data_in(3) xor data_in(4) xor data_in(6) xor data_in(10) xor data_in(18) xor data_in(19) xor data_in(20) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(28) xor data_in(31);
					CRC32_4(27) <= LFSR_4(1) xor LFSR_4(4) xor LFSR_4(5) xor LFSR_4(7) xor LFSR_4(11) xor LFSR_4(19) xor LFSR_4(20) xor LFSR_4(21) xor LFSR_4(23) xor LFSR_4(24) xor LFSR_4(25) xor LFSR_4(26) xor LFSR_4(27) xor LFSR_4(29) xor data_in(1) xor data_in(4) xor data_in(5) xor data_in(7) xor data_in(11) xor data_in(19) xor data_in(20) xor data_in(21) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(29);
					CRC32_4(28) <= LFSR_4(2) xor LFSR_4(5) xor LFSR_4(6) xor LFSR_4(8) xor LFSR_4(12) xor LFSR_4(20) xor LFSR_4(21) xor LFSR_4(22) xor LFSR_4(24) xor LFSR_4(25) xor LFSR_4(26) xor LFSR_4(27) xor LFSR_4(28) xor LFSR_4(30) xor data_in(2) xor data_in(5) xor data_in(6) xor data_in(8) xor data_in(12) xor data_in(20) xor data_in(21) xor data_in(22) xor data_in(24) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(30);
					CRC32_4(29) <= LFSR_4(3) xor LFSR_4(6) xor LFSR_4(7) xor LFSR_4(9) xor LFSR_4(13) xor LFSR_4(21) xor LFSR_4(22) xor LFSR_4(23) xor LFSR_4(25) xor LFSR_4(26) xor LFSR_4(27) xor LFSR_4(28) xor LFSR_4(29) xor LFSR_4(31) xor data_in(3) xor data_in(6) xor data_in(7) xor data_in(9) xor data_in(13) xor data_in(21) xor data_in(22) xor data_in(23) xor data_in(25) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(31);
					CRC32_4(30) <= LFSR_4(4) xor LFSR_4(7) xor LFSR_4(8) xor LFSR_4(10) xor LFSR_4(14) xor LFSR_4(22) xor LFSR_4(23) xor LFSR_4(24) xor LFSR_4(26) xor LFSR_4(27) xor LFSR_4(28) xor LFSR_4(29) xor LFSR_4(30) xor data_in(4) xor data_in(7) xor data_in(8) xor data_in(10) xor data_in(14) xor data_in(22) xor data_in(23) xor data_in(24) xor data_in(26) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(30);
					CRC32_4(31) <= LFSR_4(5) xor LFSR_4(8) xor LFSR_4(9) xor LFSR_4(11) xor LFSR_4(15) xor LFSR_4(23) xor LFSR_4(24) xor LFSR_4(25) xor LFSR_4(27) xor LFSR_4(28) xor LFSR_4(29) xor LFSR_4(30) xor LFSR_4(31) xor data_in(5) xor data_in(8) xor data_in(9) xor data_in(11) xor data_in(15) xor data_in(23) xor data_in(24) xor data_in(25) xor data_in(27) xor data_in(28) xor data_in(29) xor data_in(30) xor data_in(31);
				end if;
			end if;
	end process;
	
	-- Замена вышедшего из строя вычислителя дополнительным вычислителем по достижению заданного количества ошибок
	process (error_CRC32_1, error_CRC32_2, error_CRC32_3)
		begin
			if not enable_CRC32_4 then
				if error_CRC32_1 = 3 then
					enable_CRC32_1 <= false;
					enable_CRC32_4 <= true;
				end if;
				
				if error_CRC32_2 = 3 then
					enable_CRC32_2 <= false;
					enable_CRC32_4 <= true;
				end if;
				
				if error_CRC32_3 = 3 then
					enable_CRC32_3 <= false;
					enable_CRC32_4 <= true;
				end if;
			end if;
	end process;
	
	-- Выбор активных вычислителей для передачи их значений во входные значения голосующего элемента
	process (clk)
		begin
			if rising_edge(clk) then
				if enable_CRC32_1 then
					internal_voting_element_in_1 <= CRC32_1;
				else
					internal_voting_element_in_1 <= CRC32_4;
				end if;
				
				if enable_CRC32_2 then
					internal_voting_element_in_2 <= CRC32_2;
				else
					internal_voting_element_in_2 <= CRC32_4;
				end if;
				
				if enable_CRC32_3 then
					internal_voting_element_in_3 <= CRC32_3;
				else
					internal_voting_element_in_3 <= CRC32_4;
				end if;
			end if;
	end process;
	
	-- Отображение принимаемых значений голосующим элементом при моделировании
	voting_element_in_1 <= internal_voting_element_in_1;
	voting_element_in_2 <= internal_voting_element_in_2;
	voting_element_in_3 <= internal_voting_element_in_3;
	
	-- Подсчёт ошибок в вычислителях
	process (internal_voting_element_in_1, internal_voting_element_in_2, internal_voting_element_in_3)
		begin
			if not enable_CRC32_4 then
				if (internal_voting_element_in_1 = internal_voting_element_in_2) and (internal_voting_element_in_1 /= internal_voting_element_in_3) then
					error_CRC32_3 <= error_CRC32_3 + 1;
				elsif (internal_voting_element_in_1 = internal_voting_element_in_3) and (internal_voting_element_in_1 /= internal_voting_element_in_2) then
					error_CRC32_2 <= error_CRC32_2 + 1;
				elsif (internal_voting_element_in_2 = internal_voting_element_in_3) and (internal_voting_element_in_1 /= internal_voting_element_in_2) then
					error_CRC32_1 <= error_CRC32_1 + 1;
				end if;
			end if;
	end process;
	
	-- Голосующий элемент
	process (clk)
		begin
			if rising_edge(clk) then
				if (internal_voting_element_in_1 = internal_voting_element_in_2) or (internal_voting_element_in_1 = internal_voting_element_in_3) then
					internal_voting_element_out <= internal_voting_element_in_1;
				elsif internal_voting_element_in_2 = internal_voting_element_in_3 then
					internal_voting_element_out <= internal_voting_element_in_2;
				else
					internal_voting_element_out <= (others => '0');
				end if;
			end if;
	end process;
	
	-- Отображение результата работы голосующего элемента при моделировании
	voting_element_out <= internal_voting_element_out;
end architecture behavioral;